"""
✨ `Company_KeyOutput` returns the primary key fields of table type `Company`.

It has the same format as `Company_Key`, but is only used as mutation return value.
"""
scalar Company_KeyOutput
"""
✨ `User_KeyOutput` returns the primary key fields of table type `User`.

It has the same format as `User_Key`, but is only used as mutation return value.
"""
scalar User_KeyOutput
"""
✨ `Vehicle_KeyOutput` returns the primary key fields of table type `Vehicle`.

It has the same format as `Vehicle_Key`, but is only used as mutation return value.
"""
scalar Vehicle_KeyOutput
"""
✨ `WeighingSession_KeyOutput` returns the primary key fields of table type `WeighingSession`.

It has the same format as `WeighingSession_Key`, but is only used as mutation return value.
"""
scalar WeighingSession_KeyOutput
"""
✨ Generated data input type for table 'Company'. It includes all necessary fields for creating or upserting rows into table.
"""
input Company_Data {
  """
  ✨ Generated from Field `Company`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Company`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Company`.`address` of type `String`
  """
  address: String
  """
  ✨ `_expr` server value variant of `address` (✨ Generated from Field `Company`.`address` of type `String`)
  """
  address_expr: String_Expr
  """
  ✨ Generated from Field `Company`.`companyName` of type `String!`
  """
  companyName: String
  """
  ✨ `_expr` server value variant of `companyName` (✨ Generated from Field `Company`.`companyName` of type `String!`)
  """
  companyName_expr: String_Expr
  """
  ✨ Generated from Field `Company`.`contactPerson` of type `String`
  """
  contactPerson: String
  """
  ✨ `_expr` server value variant of `contactPerson` (✨ Generated from Field `Company`.`contactPerson` of type `String`)
  """
  contactPerson_expr: String_Expr
  """
  ✨ Generated from Field `Company`.`email` of type `String`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `Company`.`email` of type `String`)
  """
  email_expr: String_Expr
  """
  ✨ Generated from Field `Company`.`phoneNumber` of type `String`
  """
  phoneNumber: String
  """
  ✨ `_expr` server value variant of `phoneNumber` (✨ Generated from Field `Company`.`phoneNumber` of type `String`)
  """
  phoneNumber_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Company'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Company_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Company_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Company_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Company_Filter!]
  """
  ✨ Generated from Field `Company`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Company`.`address` of type `String`
  """
  address: String_Filter
  """
  ✨ Generated from Field `Company`.`companyName` of type `String!`
  """
  companyName: String_Filter
  """
  ✨ Generated from Field `Company`.`contactPerson` of type `String`
  """
  contactPerson: String_Filter
  """
  ✨ Generated from Field `Company`.`email` of type `String`
  """
  email: String_Filter
  """
  ✨ Generated from Field `Company`.`phoneNumber` of type `String`
  """
  phoneNumber: String_Filter
}
"""
✨ Generated first-row input type for table 'Company'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Company_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Company_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Company_Filter
}
"""
✨ Generated having input type for table 'Company'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Company_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Company_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Company_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Company_Having!]
  """
  ✨ Generated from Field `Company`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Company`.`address_count` of type `Int!`
  """
  address_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`companyName_count` of type `Int!`
  """
  companyName_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`contactPerson_count` of type `Int!`
  """
  contactPerson_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`email_count` of type `Int!`
  """
  email_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Company`.`phoneNumber_count` of type `Int!`
  """
  phoneNumber_count: Int_Filter
}
"""
✨ Generated key input type for table 'Company'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Company_Key {
  """
  ✨ Generated from Field `Company`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Company`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Company'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Company_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Company_Filter
}
"""
✨ Generated order input type for table 'Company'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Company_Order {
  """
  ✨ Generated from Field `Company`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Company`.`address` of type `String`
  """
  address: OrderDirection
  """
  ✨ Generated from Field `Company`.`companyName` of type `String!`
  """
  companyName: OrderDirection
  """
  ✨ Generated from Field `Company`.`contactPerson` of type `String`
  """
  contactPerson: OrderDirection
  """
  ✨ Generated from Field `Company`.`email` of type `String`
  """
  email: OrderDirection
  """
  ✨ Generated from Field `Company`.`phoneNumber` of type `String`
  """
  phoneNumber: OrderDirection
  """
  ✨ Generated from Field `Company`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Company`.`address_count` of type `Int!`
  """
  address_count: OrderDirection
  """
  ✨ Generated from Field `Company`.`companyName_count` of type `Int!`
  """
  companyName_count: OrderDirection
  """
  ✨ Generated from Field `Company`.`contactPerson_count` of type `Int!`
  """
  contactPerson_count: OrderDirection
  """
  ✨ Generated from Field `Company`.`email_count` of type `Int!`
  """
  email_count: OrderDirection
  """
  ✨ Generated from Field `Company`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `Company`.`phoneNumber_count` of type `Int!`
  """
  phoneNumber_count: OrderDirection
}
"""
✨ Generated data input type for table 'User'. It includes all necessary fields for creating or upserting rows into table.
"""
input User_Data {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `User`.`displayName` of type `String!`
  """
  displayName: String
  """
  ✨ `_expr` server value variant of `displayName` (✨ Generated from Field `User`.`displayName` of type `String!`)
  """
  displayName_expr: String_Expr
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `User`.`email` of type `String!`)
  """
  email_expr: String_Expr
  """
  ✨ Generated from Field `User`.`phoneNumber` of type `String`
  """
  phoneNumber: String
  """
  ✨ `_expr` server value variant of `phoneNumber` (✨ Generated from Field `User`.`phoneNumber` of type `String`)
  """
  phoneNumber_expr: String_Expr
  """
  ✨ Generated from Field `User`.`role` of type `String!`
  """
  role: String
  """
  ✨ `_expr` server value variant of `role` (✨ Generated from Field `User`.`role` of type `String!`)
  """
  role_expr: String_Expr
}
"""
✨ Generated filter input type for table 'User'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [User_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: User_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [User_Filter!]
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`displayName` of type `String!`
  """
  displayName: String_Filter
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String_Filter
  """
  ✨ Generated from Field `User`.`phoneNumber` of type `String`
  """
  phoneNumber: String_Filter
  """
  ✨ Generated from Field `User`.`role` of type `String!`
  """
  role: String_Filter
  """
  ✨ Generated from Field `User`.`weighingSessions_on_user` of type `[WeighingSession!]!`
  """
  weighingSessions_on_user: WeighingSession_ListFilter
}
"""
✨ Generated first-row input type for table 'User'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input User_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [User_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: User_Filter
}
"""
✨ Generated having input type for table 'User'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [User_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: User_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [User_Having!]
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `User`.`displayName_count` of type `Int!`
  """
  displayName_count: Int_Filter
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: Int_Filter
  """
  ✨ Generated from Field `User`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `User`.`phoneNumber_count` of type `Int!`
  """
  phoneNumber_count: Int_Filter
  """
  ✨ Generated from Field `User`.`role_count` of type `Int!`
  """
  role_count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'User'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input User_Key {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'User'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input User_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: User_Filter
}
"""
✨ Generated order input type for table 'User'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input User_Order {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `User`.`displayName` of type `String!`
  """
  displayName: OrderDirection
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: OrderDirection
  """
  ✨ Generated from Field `User`.`phoneNumber` of type `String`
  """
  phoneNumber: OrderDirection
  """
  ✨ Generated from Field `User`.`role` of type `String!`
  """
  role: OrderDirection
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `User`.`displayName_count` of type `Int!`
  """
  displayName_count: OrderDirection
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: OrderDirection
  """
  ✨ Generated from Field `User`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `User`.`phoneNumber_count` of type `Int!`
  """
  phoneNumber_count: OrderDirection
  """
  ✨ Generated from Field `User`.`role_count` of type `Int!`
  """
  role_count: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
}
"""
✨ Generated data input type for table 'Vehicle'. It includes all necessary fields for creating or upserting rows into table.
"""
input Vehicle_Data {
  """
  ✨ Generated from Field `Vehicle`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Vehicle`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Vehicle`.`licensePlate` of type `String!`
  """
  licensePlate: String
  """
  ✨ `_expr` server value variant of `licensePlate` (✨ Generated from Field `Vehicle`.`licensePlate` of type `String!`)
  """
  licensePlate_expr: String_Expr
  """
  ✨ Generated from Field `Vehicle`.`make` of type `String`
  """
  make: String
  """
  ✨ `_expr` server value variant of `make` (✨ Generated from Field `Vehicle`.`make` of type `String`)
  """
  make_expr: String_Expr
  """
  ✨ Generated from Field `Vehicle`.`model` of type `String`
  """
  model: String
  """
  ✨ `_expr` server value variant of `model` (✨ Generated from Field `Vehicle`.`model` of type `String`)
  """
  model_expr: String_Expr
  """
  ✨ Generated from Field `Vehicle`.`ownerCompanyName` of type `String`
  """
  ownerCompanyName: String
  """
  ✨ `_expr` server value variant of `ownerCompanyName` (✨ Generated from Field `Vehicle`.`ownerCompanyName` of type `String`)
  """
  ownerCompanyName_expr: String_Expr
  """
  ✨ Generated from Field `Vehicle`.`vehicleType` of type `String!`
  """
  vehicleType: String
  """
  ✨ `_expr` server value variant of `vehicleType` (✨ Generated from Field `Vehicle`.`vehicleType` of type `String!`)
  """
  vehicleType_expr: String_Expr
  """
  ✨ Generated from Field `Vehicle`.`year` of type `Int`
  """
  year: Int
  """
  ✨ `_expr` server value variant of `year` (✨ Generated from Field `Vehicle`.`year` of type `Int`)
  """
  year_expr: Int_Expr
  """
  ✨ `_update` server value variant of `year` (✨ Generated from Field `Vehicle`.`year` of type `Int`)
  """
  year_update: [Int_Update!]
}
"""
✨ Generated filter input type for table 'Vehicle'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Vehicle_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Vehicle_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Vehicle_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Vehicle_Filter!]
  """
  ✨ Generated from Field `Vehicle`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Vehicle`.`licensePlate` of type `String!`
  """
  licensePlate: String_Filter
  """
  ✨ Generated from Field `Vehicle`.`make` of type `String`
  """
  make: String_Filter
  """
  ✨ Generated from Field `Vehicle`.`model` of type `String`
  """
  model: String_Filter
  """
  ✨ Generated from Field `Vehicle`.`ownerCompanyName` of type `String`
  """
  ownerCompanyName: String_Filter
  """
  ✨ Generated from Field `Vehicle`.`vehicleType` of type `String!`
  """
  vehicleType: String_Filter
  """
  ✨ Generated from Field `Vehicle`.`year` of type `Int`
  """
  year: Int_Filter
  """
  ✨ Generated from Field `Vehicle`.`weighingSessions_on_vehicle` of type `[WeighingSession!]!`
  """
  weighingSessions_on_vehicle: WeighingSession_ListFilter
}
"""
✨ Generated first-row input type for table 'Vehicle'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Vehicle_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Vehicle_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Vehicle_Filter
}
"""
✨ Generated having input type for table 'Vehicle'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Vehicle_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Vehicle_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Vehicle_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Vehicle_Having!]
  """
  ✨ Generated from Field `Vehicle`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Vehicle`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Vehicle`.`licensePlate_count` of type `Int!`
  """
  licensePlate_count: Int_Filter
  """
  ✨ Generated from Field `Vehicle`.`make_count` of type `Int!`
  """
  make_count: Int_Filter
  """
  ✨ Generated from Field `Vehicle`.`model_count` of type `Int!`
  """
  model_count: Int_Filter
  """
  ✨ Generated from Field `Vehicle`.`ownerCompanyName_count` of type `Int!`
  """
  ownerCompanyName_count: Int_Filter
  """
  ✨ Generated from Field `Vehicle`.`vehicleType_count` of type `Int!`
  """
  vehicleType_count: Int_Filter
  """
  ✨ Generated from Field `Vehicle`.`year_count` of type `Int!`
  """
  year_count: Int_Filter
  """
  ✨ Generated from Field `Vehicle`.`year_sum` of type `Int`
  """
  year_sum: Int_Filter
  """
  ✨ Generated from Field `Vehicle`.`year_avg` of type `Float`
  """
  year_avg: Float_Filter
  """
  ✨ Generated from Field `Vehicle`.`year_min` of type `Int`
  """
  year_min: Int_Filter
  """
  ✨ Generated from Field `Vehicle`.`year_max` of type `Int`
  """
  year_max: Int_Filter
}
"""
✨ Generated key input type for table 'Vehicle'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Vehicle_Key {
  """
  ✨ Generated from Field `Vehicle`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Vehicle`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Vehicle'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Vehicle_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Vehicle_Filter
}
"""
✨ Generated order input type for table 'Vehicle'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Vehicle_Order {
  """
  ✨ Generated from Field `Vehicle`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Vehicle`.`licensePlate` of type `String!`
  """
  licensePlate: OrderDirection
  """
  ✨ Generated from Field `Vehicle`.`make` of type `String`
  """
  make: OrderDirection
  """
  ✨ Generated from Field `Vehicle`.`model` of type `String`
  """
  model: OrderDirection
  """
  ✨ Generated from Field `Vehicle`.`ownerCompanyName` of type `String`
  """
  ownerCompanyName: OrderDirection
  """
  ✨ Generated from Field `Vehicle`.`vehicleType` of type `String!`
  """
  vehicleType: OrderDirection
  """
  ✨ Generated from Field `Vehicle`.`year` of type `Int`
  """
  year: OrderDirection
  """
  ✨ Generated from Field `Vehicle`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Vehicle`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `Vehicle`.`licensePlate_count` of type `Int!`
  """
  licensePlate_count: OrderDirection
  """
  ✨ Generated from Field `Vehicle`.`make_count` of type `Int!`
  """
  make_count: OrderDirection
  """
  ✨ Generated from Field `Vehicle`.`model_count` of type `Int!`
  """
  model_count: OrderDirection
  """
  ✨ Generated from Field `Vehicle`.`ownerCompanyName_count` of type `Int!`
  """
  ownerCompanyName_count: OrderDirection
  """
  ✨ Generated from Field `Vehicle`.`vehicleType_count` of type `Int!`
  """
  vehicleType_count: OrderDirection
  """
  ✨ Generated from Field `Vehicle`.`year_count` of type `Int!`
  """
  year_count: OrderDirection
  """
  ✨ Generated from Field `Vehicle`.`year_sum` of type `Int`
  """
  year_sum: OrderDirection
  """
  ✨ Generated from Field `Vehicle`.`year_avg` of type `Float`
  """
  year_avg: OrderDirection
  """
  ✨ Generated from Field `Vehicle`.`year_min` of type `Int`
  """
  year_min: OrderDirection
  """
  ✨ Generated from Field `Vehicle`.`year_max` of type `Int`
  """
  year_max: OrderDirection
}
"""
✨ Generated data input type for table 'WeighingSession'. It includes all necessary fields for creating or upserting rows into table.
"""
input WeighingSession_Data {
  """
  ✨ Generated from Field `WeighingSession`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `WeighingSession`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `WeighingSession`.`userId` of type `UUID`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `WeighingSession`.`userId` of type `UUID`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `WeighingSession`.`vehicleId` of type `UUID`
  """
  vehicleId: UUID
  """
  ✨ `_expr` server value variant of `vehicleId` (✨ Generated from Field `WeighingSession`.`vehicleId` of type `UUID`)
  """
  vehicleId_expr: UUID_Expr
  """
  ✨ Generated from Field `WeighingSession`.`user` of type `User`
  """
  user: User_Key
  """
  ✨ Generated from Field `WeighingSession`.`vehicle` of type `Vehicle`
  """
  vehicle: Vehicle_Key
  """
  ✨ Generated from Field `WeighingSession`.`cargoDescription` of type `String`
  """
  cargoDescription: String
  """
  ✨ `_expr` server value variant of `cargoDescription` (✨ Generated from Field `WeighingSession`.`cargoDescription` of type `String`)
  """
  cargoDescription_expr: String_Expr
  """
  ✨ Generated from Field `WeighingSession`.`destination` of type `String`
  """
  destination: String
  """
  ✨ `_expr` server value variant of `destination` (✨ Generated from Field `WeighingSession`.`destination` of type `String`)
  """
  destination_expr: String_Expr
  """
  ✨ Generated from Field `WeighingSession`.`grossWeight` of type `Float!`
  """
  grossWeight: Float
  """
  ✨ `_expr` server value variant of `grossWeight` (✨ Generated from Field `WeighingSession`.`grossWeight` of type `Float!`)
  """
  grossWeight_expr: Float_Expr
  """
  ✨ `_update` server value variant of `grossWeight` (✨ Generated from Field `WeighingSession`.`grossWeight` of type `Float!`)
  """
  grossWeight_update: [Float_Update!]
  """
  ✨ Generated from Field `WeighingSession`.`netWeight` of type `Float`
  """
  netWeight: Float
  """
  ✨ `_expr` server value variant of `netWeight` (✨ Generated from Field `WeighingSession`.`netWeight` of type `Float`)
  """
  netWeight_expr: Float_Expr
  """
  ✨ `_update` server value variant of `netWeight` (✨ Generated from Field `WeighingSession`.`netWeight` of type `Float`)
  """
  netWeight_update: [Float_Update!]
  """
  ✨ Generated from Field `WeighingSession`.`notes` of type `String`
  """
  notes: String
  """
  ✨ `_expr` server value variant of `notes` (✨ Generated from Field `WeighingSession`.`notes` of type `String`)
  """
  notes_expr: String_Expr
  """
  ✨ Generated from Field `WeighingSession`.`origin` of type `String`
  """
  origin: String
  """
  ✨ `_expr` server value variant of `origin` (✨ Generated from Field `WeighingSession`.`origin` of type `String`)
  """
  origin_expr: String_Expr
  """
  ✨ Generated from Field `WeighingSession`.`status` of type `String!`
  """
  status: String
  """
  ✨ `_expr` server value variant of `status` (✨ Generated from Field `WeighingSession`.`status` of type `String!`)
  """
  status_expr: String_Expr
  """
  ✨ Generated from Field `WeighingSession`.`tareWeight` of type `Float`
  """
  tareWeight: Float
  """
  ✨ `_expr` server value variant of `tareWeight` (✨ Generated from Field `WeighingSession`.`tareWeight` of type `Float`)
  """
  tareWeight_expr: Float_Expr
  """
  ✨ `_update` server value variant of `tareWeight` (✨ Generated from Field `WeighingSession`.`tareWeight` of type `Float`)
  """
  tareWeight_update: [Float_Update!]
  """
  ✨ Generated from Field `WeighingSession`.`timestamp` of type `Timestamp!`
  """
  timestamp: Timestamp
  """
  ✨ `_expr` server value variant of `timestamp` (✨ Generated from Field `WeighingSession`.`timestamp` of type `Timestamp!`)
  """
  timestamp_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `timestamp` (✨ Generated from Field `WeighingSession`.`timestamp` of type `Timestamp!`)
  """
  timestamp_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `timestamp` (✨ Generated from Field `WeighingSession`.`timestamp` of type `Timestamp!`)
  """
  timestamp_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'WeighingSession'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input WeighingSession_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [WeighingSession_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: WeighingSession_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [WeighingSession_Filter!]
  """
  ✨ Generated from Field `WeighingSession`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `WeighingSession`.`userId` of type `UUID`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `WeighingSession`.`vehicleId` of type `UUID`
  """
  vehicleId: UUID_Filter
  """
  ✨ Generated from Field `WeighingSession`.`user` of type `User`
  """
  user: User_Filter
  """
  ✨ Generated from Field `WeighingSession`.`vehicle` of type `Vehicle`
  """
  vehicle: Vehicle_Filter
  """
  ✨ Generated from Field `WeighingSession`.`cargoDescription` of type `String`
  """
  cargoDescription: String_Filter
  """
  ✨ Generated from Field `WeighingSession`.`destination` of type `String`
  """
  destination: String_Filter
  """
  ✨ Generated from Field `WeighingSession`.`grossWeight` of type `Float!`
  """
  grossWeight: Float_Filter
  """
  ✨ Generated from Field `WeighingSession`.`netWeight` of type `Float`
  """
  netWeight: Float_Filter
  """
  ✨ Generated from Field `WeighingSession`.`notes` of type `String`
  """
  notes: String_Filter
  """
  ✨ Generated from Field `WeighingSession`.`origin` of type `String`
  """
  origin: String_Filter
  """
  ✨ Generated from Field `WeighingSession`.`status` of type `String!`
  """
  status: String_Filter
  """
  ✨ Generated from Field `WeighingSession`.`tareWeight` of type `Float`
  """
  tareWeight: Float_Filter
  """
  ✨ Generated from Field `WeighingSession`.`timestamp` of type `Timestamp!`
  """
  timestamp: Timestamp_Filter
}
"""
✨ Generated first-row input type for table 'WeighingSession'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input WeighingSession_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [WeighingSession_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: WeighingSession_Filter
}
"""
✨ Generated having input type for table 'WeighingSession'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input WeighingSession_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [WeighingSession_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: WeighingSession_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [WeighingSession_Having!]
  """
  ✨ Generated from Field `WeighingSession`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `WeighingSession`.`cargoDescription_count` of type `Int!`
  """
  cargoDescription_count: Int_Filter
  """
  ✨ Generated from Field `WeighingSession`.`destination_count` of type `Int!`
  """
  destination_count: Int_Filter
  """
  ✨ Generated from Field `WeighingSession`.`grossWeight_count` of type `Int!`
  """
  grossWeight_count: Int_Filter
  """
  ✨ Generated from Field `WeighingSession`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `WeighingSession`.`netWeight_count` of type `Int!`
  """
  netWeight_count: Int_Filter
  """
  ✨ Generated from Field `WeighingSession`.`notes_count` of type `Int!`
  """
  notes_count: Int_Filter
  """
  ✨ Generated from Field `WeighingSession`.`origin_count` of type `Int!`
  """
  origin_count: Int_Filter
  """
  ✨ Generated from Field `WeighingSession`.`status_count` of type `Int!`
  """
  status_count: Int_Filter
  """
  ✨ Generated from Field `WeighingSession`.`tareWeight_count` of type `Int!`
  """
  tareWeight_count: Int_Filter
  """
  ✨ Generated from Field `WeighingSession`.`timestamp_count` of type `Int!`
  """
  timestamp_count: Int_Filter
  """
  ✨ Generated from Field `WeighingSession`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `WeighingSession`.`vehicleId_count` of type `Int!`
  """
  vehicleId_count: Int_Filter
  """
  ✨ Generated from Field `WeighingSession`.`grossWeight_sum` of type `Float`
  """
  grossWeight_sum: Float_Filter
  """
  ✨ Generated from Field `WeighingSession`.`netWeight_sum` of type `Float`
  """
  netWeight_sum: Float_Filter
  """
  ✨ Generated from Field `WeighingSession`.`tareWeight_sum` of type `Float`
  """
  tareWeight_sum: Float_Filter
  """
  ✨ Generated from Field `WeighingSession`.`grossWeight_avg` of type `Float`
  """
  grossWeight_avg: Float_Filter
  """
  ✨ Generated from Field `WeighingSession`.`netWeight_avg` of type `Float`
  """
  netWeight_avg: Float_Filter
  """
  ✨ Generated from Field `WeighingSession`.`tareWeight_avg` of type `Float`
  """
  tareWeight_avg: Float_Filter
  """
  ✨ Generated from Field `WeighingSession`.`grossWeight_min` of type `Float`
  """
  grossWeight_min: Float_Filter
  """
  ✨ Generated from Field `WeighingSession`.`netWeight_min` of type `Float`
  """
  netWeight_min: Float_Filter
  """
  ✨ Generated from Field `WeighingSession`.`tareWeight_min` of type `Float`
  """
  tareWeight_min: Float_Filter
  """
  ✨ Generated from Field `WeighingSession`.`timestamp_min` of type `Timestamp`
  """
  timestamp_min: Timestamp_Filter
  """
  ✨ Generated from Field `WeighingSession`.`grossWeight_max` of type `Float`
  """
  grossWeight_max: Float_Filter
  """
  ✨ Generated from Field `WeighingSession`.`netWeight_max` of type `Float`
  """
  netWeight_max: Float_Filter
  """
  ✨ Generated from Field `WeighingSession`.`tareWeight_max` of type `Float`
  """
  tareWeight_max: Float_Filter
  """
  ✨ Generated from Field `WeighingSession`.`timestamp_max` of type `Timestamp`
  """
  timestamp_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'WeighingSession'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input WeighingSession_Key {
  """
  ✨ Generated from Field `WeighingSession`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `WeighingSession`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'WeighingSession'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input WeighingSession_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: WeighingSession_Filter
}
"""
✨ Generated order input type for table 'WeighingSession'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input WeighingSession_Order {
  """
  ✨ Generated from Field `WeighingSession`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`userId` of type `UUID`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`vehicleId` of type `UUID`
  """
  vehicleId: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`user` of type `User`
  """
  user: User_Order
  """
  ✨ Generated from Field `WeighingSession`.`vehicle` of type `Vehicle`
  """
  vehicle: Vehicle_Order
  """
  ✨ Generated from Field `WeighingSession`.`cargoDescription` of type `String`
  """
  cargoDescription: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`destination` of type `String`
  """
  destination: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`grossWeight` of type `Float!`
  """
  grossWeight: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`netWeight` of type `Float`
  """
  netWeight: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`notes` of type `String`
  """
  notes: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`origin` of type `String`
  """
  origin: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`status` of type `String!`
  """
  status: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`tareWeight` of type `Float`
  """
  tareWeight: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`timestamp` of type `Timestamp!`
  """
  timestamp: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`cargoDescription_count` of type `Int!`
  """
  cargoDescription_count: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`destination_count` of type `Int!`
  """
  destination_count: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`grossWeight_count` of type `Int!`
  """
  grossWeight_count: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`netWeight_count` of type `Int!`
  """
  netWeight_count: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`notes_count` of type `Int!`
  """
  notes_count: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`origin_count` of type `Int!`
  """
  origin_count: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`status_count` of type `Int!`
  """
  status_count: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`tareWeight_count` of type `Int!`
  """
  tareWeight_count: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`timestamp_count` of type `Int!`
  """
  timestamp_count: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`userId_count` of type `Int!`
  """
  userId_count: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`vehicleId_count` of type `Int!`
  """
  vehicleId_count: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`grossWeight_sum` of type `Float`
  """
  grossWeight_sum: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`netWeight_sum` of type `Float`
  """
  netWeight_sum: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`tareWeight_sum` of type `Float`
  """
  tareWeight_sum: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`grossWeight_avg` of type `Float`
  """
  grossWeight_avg: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`netWeight_avg` of type `Float`
  """
  netWeight_avg: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`tareWeight_avg` of type `Float`
  """
  tareWeight_avg: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`grossWeight_min` of type `Float`
  """
  grossWeight_min: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`netWeight_min` of type `Float`
  """
  netWeight_min: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`tareWeight_min` of type `Float`
  """
  tareWeight_min: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`timestamp_min` of type `Timestamp`
  """
  timestamp_min: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`grossWeight_max` of type `Float`
  """
  grossWeight_max: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`netWeight_max` of type `Float`
  """
  netWeight_max: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`tareWeight_max` of type `Float`
  """
  tareWeight_max: OrderDirection
  """
  ✨ Generated from Field `WeighingSession`.`timestamp_max` of type `Timestamp`
  """
  timestamp_max: OrderDirection
}
